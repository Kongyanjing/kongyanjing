{"version":3,"sources":["tree/Tree.jsx"],"names":["Tree","arguments","renderSwitcherIcon","prefixCls","switcherIcon","isLeaf","expanded","loading","showLine","props","switcherCls","switcherOriginCls","className","React","cloneElement","setTreeRef","node","tree","renderTree","getPrefixCls","customizePrefixCls","showIcon","blockNode","children","checkable","nodeProps","Component","TreeNode","DirectoryTree","defaultProps","motion","collapseMotion","motionAppear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSwitcherIcon = (prefixCls, switcherIcon, { isLeaf, expanded, loading }) => {\n            const { showLine } = this.props;\n            if (loading) {\n                return <Icon type=\"loading\" className={`${prefixCls}-switcher-loading-icon`}/>;\n            }\n            if (isLeaf) {\n                if (showLine) {\n                    return <Icon type=\"file\" className={`${prefixCls}-switcher-line-icon`}/>;\n                }\n                return null;\n            }\n            const switcherCls = `${prefixCls}-switcher-icon`;\n            if (switcherIcon) {\n                const switcherOriginCls = switcherIcon.props.className || '';\n                return React.cloneElement(switcherIcon, {\n                    className: classNames(switcherOriginCls, switcherCls),\n                });\n            }\n            if (showLine) {\n                return (<Icon type={expanded ? 'minus-square' : 'plus-square'} className={`${prefixCls}-switcher-line-icon`} theme=\"outlined\"/>);\n            }\n            return <Icon type=\"caret-down\" className={switcherCls} theme=\"filled\"/>;\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => this.renderSwitcherIcon(prefixCls, switcherIcon, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}