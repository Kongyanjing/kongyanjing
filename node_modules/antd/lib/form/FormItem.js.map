{"version":3,"sources":["form/FormItem.jsx"],"names":["ValidateStatuses","intersperseSpace","list","reduce","current","item","slice","FormItem","arguments","helpShow","onLabelClick","id","props","getId","formItemNode","ReactDOM","findDOMNode","control","querySelector","focus","onHelpAnimEnd","_key","setState","renderFormItem","getPrefixCls","customizePrefixCls","prefixCls","style","className","children","renderChildren","itemClassName","help","validateStatus","getControls","length","undefined","getOnlyControl","getField","errors","map","e","index","node","React","isValidElement","message","cloneElement","key","recursively","controls","childrenArray","Children","toArray","i","child","type","displayName","FIELD_META_PROP","push","concat","prop","getChildProp","FIELD_DATA_PROP","onlyControl","field","validating","fieldValue","value","getMeta","initialValue","required","meta","validate","filter","rules","some","rule","getHelpMessage","extra","c1","c2","c3","getValidateStatus","classes","hasFeedback","iconType","icon","contextWrapperCol","wrapperCol","vertical","mergedWrapperCol","contextLabelAlign","labelAlign","contextLabelCol","labelCol","contextColon","colon","label","htmlFor","isRequired","mergedLabelCol","mergedLabelAlign","labelClsBasic","labelColClassName","labelChildren","computedColon","haveColon","trim","replace","labelClassName","renderLabel","renderWrapper","renderValidateWrapper","renderHelp","renderExtra","Component","defaultProps","propTypes","PropTypes","string","oneOfType","object","bool","oneOf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport FormContext from './context';\nconst ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\nfunction intersperseSpace(list) {\n    return list.reduce((current, item) => [...current, ' ', item], []).slice(1);\n}\nexport default class FormItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.helpShow = false;\n        // Resolve duplicated ids bug between different forms\n        // https://github.com/ant-design/ant-design/issues/7351\n        this.onLabelClick = () => {\n            const id = this.props.id || this.getId();\n            if (!id) {\n                return;\n            }\n            const formItemNode = ReactDOM.findDOMNode(this);\n            const control = formItemNode.querySelector(`[id=\"${id}\"]`);\n            if (control && control.focus) {\n                control.focus();\n            }\n        };\n        this.onHelpAnimEnd = (_key, helpShow) => {\n            this.helpShow = helpShow;\n            if (!helpShow) {\n                this.setState({});\n            }\n        };\n        this.renderFormItem = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, style, className } = this.props;\n            const prefixCls = getPrefixCls('form', customizePrefixCls);\n            const children = this.renderChildren(prefixCls);\n            const itemClassName = {\n                [`${prefixCls}-item`]: true,\n                [`${prefixCls}-item-with-help`]: this.helpShow,\n                [`${className}`]: !!className,\n            };\n            return (<Row className={classNames(itemClassName)} style={style} key=\"row\">\n        {children}\n      </Row>);\n        };\n    }\n    componentDidMount() {\n        const { children, help, validateStatus, id } = this.props;\n        warning(this.getControls(children, true).length <= 1 ||\n            (help !== undefined || validateStatus !== undefined), 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' +\n            'while there are more than one `getFieldDecorator` in it.');\n        warning(!id, 'Form.Item', '`id` is deprecated for its label `htmlFor`. Please use `htmlFor` directly.');\n    }\n    getHelpMessage() {\n        const { help } = this.props;\n        if (help === undefined && this.getOnlyControl()) {\n            const { errors } = this.getField();\n            if (errors) {\n                return intersperseSpace(errors.map((e, index) => {\n                    let node = null;\n                    if (React.isValidElement(e)) {\n                        node = e;\n                    }\n                    else if (React.isValidElement(e.message)) {\n                        node = e.message;\n                    }\n                    // eslint-disable-next-line react/no-array-index-key\n                    return node ? React.cloneElement(node, { key: index }) : e.message;\n                }));\n            }\n            return '';\n        }\n        return help;\n    }\n    getControls(children, recursively) {\n        let controls = [];\n        const childrenArray = React.Children.toArray(children);\n        for (let i = 0; i < childrenArray.length; i++) {\n            if (!recursively && controls.length > 0) {\n                break;\n            }\n            const child = childrenArray[i];\n            if (child.type &&\n                (child.type === FormItem || child.type.displayName === 'FormItem')) {\n                continue;\n            }\n            if (!child.props) {\n                continue;\n            }\n            if (FIELD_META_PROP in child.props) {\n                // And means FIELD_DATA_PROP in child.props, too.\n                controls.push(child);\n            }\n            else if (child.props.children) {\n                controls = controls.concat(this.getControls(child.props.children, recursively));\n            }\n        }\n        return controls;\n    }\n    getOnlyControl() {\n        const child = this.getControls(this.props.children, false)[0];\n        return child !== undefined ? child : null;\n    }\n    getChildProp(prop) {\n        const child = this.getOnlyControl();\n        return child && child.props && child.props[prop];\n    }\n    getId() {\n        return this.getChildProp('id');\n    }\n    getMeta() {\n        return this.getChildProp(FIELD_META_PROP);\n    }\n    getField() {\n        return this.getChildProp(FIELD_DATA_PROP);\n    }\n    getValidateStatus() {\n        const onlyControl = this.getOnlyControl();\n        if (!onlyControl) {\n            return '';\n        }\n        const field = this.getField();\n        if (field.validating) {\n            return 'validating';\n        }\n        if (field.errors) {\n            return 'error';\n        }\n        const fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n        if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n            return 'success';\n        }\n        return '';\n    }\n    isRequired() {\n        const { required } = this.props;\n        if (required !== undefined) {\n            return required;\n        }\n        if (this.getOnlyControl()) {\n            const meta = this.getMeta() || {};\n            const validate = meta.validate || [];\n            return validate\n                .filter((item) => !!item.rules)\n                .some((item) => {\n                return item.rules.some((rule) => rule.required);\n            });\n        }\n        return false;\n    }\n    renderHelp(prefixCls) {\n        const help = this.getHelpMessage();\n        const children = help ? (<div className={`${prefixCls}-explain`} key=\"help\">\n        {help}\n      </div>) : null;\n        if (children) {\n            this.helpShow = !!children;\n        }\n        return (<Animate transitionName=\"show-help\" component=\"\" transitionAppear key=\"help\" onEnd={this.onHelpAnimEnd}>\n        {children}\n      </Animate>);\n    }\n    renderExtra(prefixCls) {\n        const { extra } = this.props;\n        return extra ? <div className={`${prefixCls}-extra`}>{extra}</div> : null;\n    }\n    renderValidateWrapper(prefixCls, c1, c2, c3) {\n        const { props } = this;\n        const onlyControl = this.getOnlyControl;\n        const validateStatus = props.validateStatus === undefined && onlyControl\n            ? this.getValidateStatus()\n            : props.validateStatus;\n        let classes = `${prefixCls}-item-control`;\n        if (validateStatus) {\n            classes = classNames(`${prefixCls}-item-control`, {\n                'has-feedback': props.hasFeedback || validateStatus === 'validating',\n                'has-success': validateStatus === 'success',\n                'has-warning': validateStatus === 'warning',\n                'has-error': validateStatus === 'error',\n                'is-validating': validateStatus === 'validating',\n            });\n        }\n        let iconType = '';\n        switch (validateStatus) {\n            case 'success':\n                iconType = 'check-circle';\n                break;\n            case 'warning':\n                iconType = 'exclamation-circle';\n                break;\n            case 'error':\n                iconType = 'close-circle';\n                break;\n            case 'validating':\n                iconType = 'loading';\n                break;\n            default:\n                iconType = '';\n                break;\n        }\n        const icon = props.hasFeedback && iconType ? (<span className={`${prefixCls}-item-children-icon`}>\n          <Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>\n        </span>) : null;\n        return (<div className={classes}>\n        <span className={`${prefixCls}-item-children`}>\n          {c1}\n          {icon}\n        </span>\n        {c2}\n        {c3}\n      </div>);\n    }\n    renderWrapper(prefixCls, children) {\n        return (<FormContext.Consumer key=\"wrapper\">\n        {({ wrapperCol: contextWrapperCol, vertical }) => {\n            const { wrapperCol } = this.props;\n            const mergedWrapperCol = ('wrapperCol' in this.props ? wrapperCol : contextWrapperCol) || {};\n            const className = classNames(`${prefixCls}-item-control-wrapper`, mergedWrapperCol.className);\n            // No pass FormContext since it's useless\n            return (<FormContext.Provider value={{ vertical }}>\n              <Col {...mergedWrapperCol} className={className}>\n                {children}\n              </Col>\n            </FormContext.Provider>);\n        }}\n      </FormContext.Consumer>);\n    }\n    renderLabel(prefixCls) {\n        return (<FormContext.Consumer key=\"label\">\n        {({ vertical, labelAlign: contextLabelAlign, labelCol: contextLabelCol, colon: contextColon, }) => {\n            const { label, labelCol, labelAlign, colon, id, htmlFor } = this.props;\n            const required = this.isRequired();\n            const mergedLabelCol = ('labelCol' in this.props ? labelCol : contextLabelCol) || {};\n            const mergedLabelAlign = 'labelAlign' in this.props ? labelAlign : contextLabelAlign;\n            const labelClsBasic = `${prefixCls}-item-label`;\n            const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className);\n            let labelChildren = label;\n            // Keep label is original where there should have no colon\n            const computedColon = colon === true || (contextColon !== false && colon !== false);\n            const haveColon = computedColon && !vertical;\n            // Remove duplicated user input colon\n            if (haveColon && typeof label === 'string' && label.trim() !== '') {\n                labelChildren = label.replace(/[：:]\\s*$/, '');\n            }\n            const labelClassName = classNames({\n                [`${prefixCls}-item-required`]: required,\n                [`${prefixCls}-item-no-colon`]: !computedColon,\n            });\n            return label ? (<Col {...mergedLabelCol} className={labelColClassName}>\n              <label htmlFor={htmlFor || id || this.getId()} className={labelClassName} title={typeof label === 'string' ? label : ''} onClick={this.onLabelClick}>\n                {labelChildren}\n              </label>\n            </Col>) : null;\n        }}\n      </FormContext.Consumer>);\n    }\n    renderChildren(prefixCls) {\n        const { children } = this.props;\n        return [\n            this.renderLabel(prefixCls),\n            this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls))),\n        ];\n    }\n    render() {\n        return <ConfigConsumer>{this.renderFormItem}</ConfigConsumer>;\n    }\n}\nFormItem.defaultProps = {\n    hasFeedback: false,\n};\nFormItem.propTypes = {\n    prefixCls: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    labelAlign: PropTypes.string,\n    labelCol: PropTypes.object,\n    help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    validateStatus: PropTypes.oneOf(ValidateStatuses),\n    hasFeedback: PropTypes.bool,\n    wrapperCol: PropTypes.object,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    children: PropTypes.node,\n    colon: PropTypes.bool,\n};\n"],"file":"FormItem.js"}