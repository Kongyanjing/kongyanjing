{"version":3,"sources":["alert/index.jsx"],"names":["React","ReactDOM","Animate","classNames","Icon","ConfigConsumer","getDataOrAriaProps","warning","noop","Alert","props","handleClose","e","preventDefault","dom","findDOMNode","style","height","offsetHeight","setState","closing","onClose","animationEnd","closed","afterClose","renderAlert","getPrefixCls","description","customizePrefixCls","prefixCls","message","closeText","banner","className","icon","closable","type","showIcon","iconType","undefined","iconTheme","alertCls","state","closeIcon","dataOrAriaProps","iconNode","isValidElement","cloneElement","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport warning from '../_util/warning';\nfunction noop() { }\nexport default class Alert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = (e) => {\n            e.preventDefault();\n            const dom = ReactDOM.findDOMNode(this);\n            dom.style.height = `${dom.offsetHeight}px`;\n            // Magic code\n            // 重复一次后才能正确设置 height\n            dom.style.height = `${dom.offsetHeight}px`;\n            this.setState({\n                closing: false,\n            });\n            (this.props.onClose || noop)(e);\n        };\n        this.animationEnd = () => {\n            this.setState({\n                closed: true,\n                closing: true,\n            });\n            (this.props.afterClose || noop)();\n        };\n        this.renderAlert = ({ getPrefixCls }) => {\n            const { description, prefixCls: customizePrefixCls, message, closeText, banner, className = '', style, icon, } = this.props;\n            let { closable, type, showIcon, iconType } = this.props;\n            const prefixCls = getPrefixCls('alert', customizePrefixCls);\n            // banner模式默认有 Icon\n            showIcon = banner && showIcon === undefined ? true : showIcon;\n            // banner模式默认为警告\n            type = banner && type === undefined ? 'warning' : type || 'info';\n            let iconTheme = 'filled';\n            if (!iconType) {\n                switch (type) {\n                    case 'success':\n                        iconType = 'check-circle';\n                        break;\n                    case 'info':\n                        iconType = 'info-circle';\n                        break;\n                    case 'error':\n                        iconType = 'close-circle';\n                        break;\n                    case 'warning':\n                        iconType = 'exclamation-circle';\n                        break;\n                    default:\n                        iconType = 'default';\n                }\n                // use outline icon in alert with description\n                if (description) {\n                    iconTheme = 'outlined';\n                }\n            }\n            // closeable when closeText is assigned\n            if (closeText) {\n                closable = true;\n            }\n            const alertCls = classNames(prefixCls, `${prefixCls}-${type}`, {\n                [`${prefixCls}-close`]: !this.state.closing,\n                [`${prefixCls}-with-description`]: !!description,\n                [`${prefixCls}-no-icon`]: !showIcon,\n                [`${prefixCls}-banner`]: !!banner,\n                [`${prefixCls}-closable`]: closable,\n            }, className);\n            const closeIcon = closable ? (<button type=\"button\" onClick={this.handleClose} className={`${prefixCls}-close-icon`} tabIndex={0}>\n        {closeText ? (<span className={`${prefixCls}-close-text`}>{closeText}</span>) : (<Icon type=\"close\"/>)}\n      </button>) : null;\n            const dataOrAriaProps = getDataOrAriaProps(this.props);\n            const iconNode = (icon &&\n                (React.isValidElement(icon) ? (React.cloneElement(icon, {\n                    className: classNames({\n                        [icon.props.className]: icon.props.className,\n                        [`${prefixCls}-icon`]: true,\n                    }),\n                })) : (<span className={`${prefixCls}-icon`}>{icon}</span>))) || <Icon className={`${prefixCls}-icon`} type={iconType} theme={iconTheme}/>;\n            return this.state.closed ? null : (<Animate component=\"\" showProp=\"data-show\" transitionName={`${prefixCls}-slide-up`} onEnd={this.animationEnd}>\n        <div data-show={this.state.closing} className={alertCls} style={style} {...dataOrAriaProps}>\n          {showIcon ? iconNode : null}\n          <span className={`${prefixCls}-message`}>{message}</span>\n          <span className={`${prefixCls}-description`}>{description}</span>\n          {closeIcon}\n        </div>\n      </Animate>);\n        };\n        warning(!('iconType' in props), 'Alert', '`iconType` is deprecated. Please use `icon` instead.');\n        this.state = {\n            closing: true,\n            closed: false,\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAlert}</ConfigConsumer>;\n    }\n}\n"],"file":"index.js"}