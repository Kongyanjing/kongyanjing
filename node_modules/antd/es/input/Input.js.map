{"version":3,"sources":["input/Input.jsx"],"names":["React","PropTypes","classNames","omit","polyfill","ConfigConsumer","Icon","tuple","warning","fixControlledValue","value","hasPrefixSuffix","props","suffix","allowClear","InputSizes","Input","saveInput","node","input","handleKeyDown","e","onPressEnter","onKeyDown","keyCode","handleReset","setValue","focus","handleChange","target","renderComponent","getPrefixCls","customizePrefixCls","prefixCls","renderLabeledInput","renderInput","defaultValue","state","prevProps","document","activeElement","size","disabled","callback","setState","onChange","event","type","Object","create","currentTarget","originalInputValue","blur","select","undefined","renderClearIcon","children","addonBefore","addonAfter","style","className","wrapperClassName","addonClassName","addonBeforeNode","addonAfterNode","mergedWrapperClassName","mergedGroupClassName","cloneElement","renderSuffix","prefix","affixWrapperCls","getInputClassName","otherProps","renderLabeledIcon","nextProps","Component","defaultProps","propTypes","string","id","oneOf","maxLength","number","bool","any","func","onKeyUp","onFocus","onBlur"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nimport warning from '../_util/warning';\nfunction fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nfunction hasPrefixSuffix(props) {\n    return !!('prefix' in props || props.suffix || props.allowClear);\n}\nconst InputSizes = tuple('small', 'default', 'large');\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveInput = (node) => {\n            this.input = node;\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.handleReset = (e) => {\n            this.setValue('', e, () => {\n                this.focus();\n            });\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value, e);\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return this.renderLabeledInput(prefixCls, this.renderInput(prefixCls));\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    componentDidUpdate() { }\n    getSnapshotBeforeUpdate(prevProps) {\n        if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n            warning(this.input !== document.activeElement, 'Input', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`);\n        }\n        return null;\n    }\n    getInputClassName(prefixCls) {\n        const { size, disabled } = this.props;\n        return classNames(prefixCls, {\n            [`${prefixCls}-sm`]: size === 'small',\n            [`${prefixCls}-lg`]: size === 'large',\n            [`${prefixCls}-disabled`]: disabled,\n        });\n    }\n    setValue(value, e, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            let event = e;\n            if (e.type === 'click') {\n                // click clear icon\n                event = Object.create(e);\n                event.target = this.input;\n                event.currentTarget = this.input;\n                const originalInputValue = this.input.value;\n                // change input value cause e.target.value should be '' when clear input\n                this.input.value = '';\n                onChange(event);\n                // reset input value\n                this.input.value = originalInputValue;\n                return;\n            }\n            onChange(event);\n        }\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    renderClearIcon(prefixCls) {\n        const { allowClear, disabled } = this.props;\n        const { value } = this.state;\n        if (!allowClear || disabled || value === undefined || value === null || value === '') {\n            return null;\n        }\n        return (<Icon type=\"close-circle\" theme=\"filled\" onClick={this.handleReset} className={`${prefixCls}-clear-icon`} role=\"button\"/>);\n    }\n    renderSuffix(prefixCls) {\n        const { suffix, allowClear } = this.props;\n        if (suffix || allowClear) {\n            return (<span className={`${prefixCls}-suffix`}>\n          {this.renderClearIcon(prefixCls)}\n          {suffix}\n        </span>);\n        }\n        return null;\n    }\n    renderLabeledInput(prefixCls, children) {\n        const { addonBefore, addonAfter, style, size, className } = this.props;\n        // Not wrap when there is not addons\n        if (!addonBefore && !addonAfter) {\n            return children;\n        }\n        const wrapperClassName = `${prefixCls}-group`;\n        const addonClassName = `${wrapperClassName}-addon`;\n        const addonBeforeNode = addonBefore ? (<span className={addonClassName}>{addonBefore}</span>) : null;\n        const addonAfterNode = addonAfter ? <span className={addonClassName}>{addonAfter}</span> : null;\n        const mergedWrapperClassName = classNames(`${prefixCls}-wrapper`, {\n            [wrapperClassName]: addonBefore || addonAfter,\n        });\n        const mergedGroupClassName = classNames(className, `${prefixCls}-group-wrapper`, {\n            [`${prefixCls}-group-wrapper-sm`]: size === 'small',\n            [`${prefixCls}-group-wrapper-lg`]: size === 'large',\n        });\n        // Need another wrapper for changing display:table to display:inline-block\n        // and put style prop in wrapper\n        return (<span className={mergedGroupClassName} style={style}>\n        <span className={mergedWrapperClassName}>\n          {addonBeforeNode}\n          {React.cloneElement(children, { style: null })}\n          {addonAfterNode}\n        </span>\n      </span>);\n    }\n    renderLabeledIcon(prefixCls, children) {\n        const { props } = this;\n        const suffix = this.renderSuffix(prefixCls);\n        if (!hasPrefixSuffix(props)) {\n            return children;\n        }\n        const prefix = props.prefix ? (<span className={`${prefixCls}-prefix`}>{props.prefix}</span>) : null;\n        const affixWrapperCls = classNames(props.className, `${prefixCls}-affix-wrapper`, {\n            [`${prefixCls}-affix-wrapper-sm`]: props.size === 'small',\n            [`${prefixCls}-affix-wrapper-lg`]: props.size === 'large',\n            [`${prefixCls}-affix-wrapper-with-clear-btn`]: props.suffix && props.allowClear && this.state.value,\n        });\n        return (<span className={affixWrapperCls} style={props.style}>\n        {prefix}\n        {React.cloneElement(children, {\n            style: null,\n            className: this.getInputClassName(prefixCls),\n        })}\n        {suffix}\n      </span>);\n    }\n    renderInput(prefixCls) {\n        const { className, addonBefore, addonAfter } = this.props;\n        const { value } = this.state;\n        // Fix https://fb.me/react-unknown-prop\n        const otherProps = omit(this.props, [\n            'prefixCls',\n            'onPressEnter',\n            'addonBefore',\n            'addonAfter',\n            'prefix',\n            'suffix',\n            'allowClear',\n            // Input elements must be either controlled or uncontrolled,\n            // specify either the value prop, or the defaultValue prop, but not both.\n            'defaultValue',\n            'size',\n        ]);\n        return this.renderLabeledIcon(prefixCls, <input {...otherProps} value={fixControlledValue(value)} onChange={this.handleChange} className={classNames(this.getInputClassName(prefixCls), {\n            [className]: className && !addonBefore && !addonAfter,\n        })} onKeyDown={this.handleKeyDown} ref={this.saveInput}/>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nInput.defaultProps = {\n    type: 'text',\n};\nInput.propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.string,\n    size: PropTypes.oneOf(InputSizes),\n    maxLength: PropTypes.number,\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    allowClear: PropTypes.bool,\n};\npolyfill(Input);\nexport default Input;\n"],"file":"Input.js"}